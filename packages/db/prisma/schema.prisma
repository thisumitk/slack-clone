// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {

  id    Int   @id @default(autoincrement())
  email String  @unique
  password  String
  name    String?
  message Message []
  sentMessages DirectMessage[] @relation("SentMessages")
  receivedMessages DirectMessage[] @relation("ReceivedMessages")
}

model Message {

  id    Int @id @default(autoincrement())
  content   String
  createdAt  DateTime  @default(now())
  userId    Int
  channelId Int
  channel   Channel  @relation(fields: [channelId], references: [id], onDelete: Cascade)
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)

}

model Channel {

  id  Int @id @default(autoincrement())
  name String
  messges Message[]

}

model DirectMessage {

  id  Int @id @default(autoincrement())
  content   String
  senderId  Int
  recieverId  Int
  createdAt   DateTime @default(now())

  sender    User @relation("SentMessages", fields: [senderId], references: [id], onDelete: Cascade)
  reciever  User @relation("ReceivedMessages", fields: [recieverId], references: [id], onDelete: Cascade)
}